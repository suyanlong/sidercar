syntax = "proto3";

package pb;

import "basic.proto";

// Inter-blockchain Transfer Protocol
message IBTP {
  enum Type {
    INTERCHAIN = 0;
    RECEIPT_SUCCESS = 1;
    RECEIPT_FAILURE = 2;
    ASSET_EXCHANGE_INIT = 3;
    ASSET_EXCHANGE_REDEEM = 4;
    ASSET_EXCHANGE_REFUND = 5;
    ASSET_EXCHANGE_RECEIPT = 6;
  }

  enum Category {
    REQUEST = 0;
    RESPONSE = 1;
    UNKNOWN = 2;
  }

  // ID of sending chain
  string from = 1;
  // ID of receiving chain
  string to = 2;
  // Index of inter-chain transaction
  uint64 index = 3;
  // inter-chain transaction type
  Type type = 4;
  // Timestamp of inter-chain events
  int64 timestamp = 5;
  // Proof of inter-chain transactions
  bytes proof = 6;
  // Encoded content used by inter-chain
  bytes payload = 7;
  // info about other txs in the same group
  StringUint64Map group = 8;
  // Message version
  string version = 9;
  // Self-defined fields used by app-chain
  bytes extra = 10;
}

message IBTPX {
  IBTP data = 1;
  // route mode
  string mode = 2; //dirct、relay
  repeated string routeSign = 3;//路由节点签名路径，主要是对data hash签名，主要是相互校验。pier节点之间相互校验。pier 节点需要注册到中继连上。还可以过滤已经发送过的交易、也可以作恶惩罚。
  string routeMethod = 4;//single、multicast、broadcast、
  repeated string routeMethodArg = 5;//路由节点，默认第一个节点。或者转发消息。
}
// 若目的地址to不在路由表中，则使用如下规则，即routeRule如下值时。
// method：single、multicast、broadcast、随机选择、最快速度、官方节点、开源节点、nat节点。
// arg:
// single：默认第一个、或者默认路由。
// multicast：向routePeer发送。
// broadcast：广播所有的给所有的peer。
// 设置节点筛选器，根据标签。

message payload {
  bool encrypted = 1;
  bytes content = 2;
}

message content {
  string src_contract_id = 1;
  string dst_contract_id = 2;
  string func = 3;
  repeated bytes args = 4;
  string callback = 5;
  repeated bytes argsCb = 6;
  string rollback = 7;
  repeated bytes argsRb = 8;
}

message IBTPs {
  repeated IBTP ibtps = 1;
}
